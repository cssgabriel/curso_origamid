@charset "UTF-8";
/*
Mixins

São trechos de código onde podem ser reaproveitados em.

Ex:
@mixin title-large {
    font-size: 4em;
    line-height: 1;
    font-weight: 700;
    font-family: monospace;
}
*/
.flex {
  display: flex;
  align-items: center;
  justify-content: stretch;
  flex-wrap: wrap;
  gap: 20px;
}

h1 {
  font-size: 4em;
  line-height: 1;
  font-weight: 700;
  font-family: monospace;
}

/*
É muito útil para ser utilizado com os prefixos.
*/
/*
Pode ser utilizado mixin dentro de mixin
*/
div {
  box-sizing: border-box;
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  background-color: #444;
  max-width: 30vw;
  border-radius: 7px;
  margin: 60px auto 0;
  padding: 30px;
}

div p {
  color: #eee;
  font-family: monospace;
}

/*
Podemos passar argumentos nos mixins
*/
div::after {
  content: "";
  display: block;
  width: 100px;
  height: 4px;
  background: red;
}

/*
Pode colocar mais de um argumento

@mixin separador($color, $largura) {
	&::after {
		content: "";
		display: block;
		width: $largura;
		height: 4px;
		background: $color;
	}
}

Pode colocar um valor padrão caso o usuário não passe nenhum parâmetro.

@mixin separador($color: red, $largura: 100px) {
	&::after {
		content: "";
		display: block;
		width: $largura;
		height: 4px;
		background: $color;
	}
}

Argumentos que podem levar mais de um valor.

@mixin box-shadow(args...) {
    regras...
}

Podemos criar mixins para tamanhos de tela.

@mixin mobile {
    @media (max-width: 600px) {
        @content;
    }
}
*/
ul.modal {
  padding: 20px;
}

ul.modal li {
  list-style: none;
  display: inline-block;
}

ul.modal li a {
  padding: 20px;
  background-color: black;
  color: white;
  text-decoration: none;
  display: block;
}

ul.modal li a:hover {
  background-color: white;
  color: black;
}

p {
  font-weight: 700;
  font-size: 1.125rem;
  font-family: monospace;
  font-style: italic;
}
